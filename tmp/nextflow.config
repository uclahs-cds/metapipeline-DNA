methods {
	maps = [
		'a': ['b'],
		'b': ['c'],
		'c': []
	]
	test = {
		def myq = [] as Queue
		def mys = [] as Set

		['b', 'c'].each{
			myq.offer(it)
		}

		def curr_q = ''
		while (curr_q = myq.poll()) {
			System.out.println(curr_q)
		}
	}
}

methods.test()

def permutations = [] as Set
def curr_list = [1,2,3,4]
/*
while (curr_list) {
	System.out.println(curr_list)
	curr_list.eachPermutation{ permutations << it.sort() }
	curr_list = curr_list.drop(1)
}
System.out.println(permutations)
*/
def list_to_permute = []
(1..curr_list.size()).each{
	list_to_permute = []
	it.times{
		list_to_permute.add(curr_list)
	}
	list_to_permute.eachCombination{perm -> permutations.add(perm.unique().sort()) }
}

System.out.println(permutations)
