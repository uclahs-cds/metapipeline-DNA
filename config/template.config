includeConfig "${projectDir}/config/default.config"
includeConfig "${projectDir}/config/methods.config"
includeConfig "${projectDir}/nextflow.config"

params {
    input_csv = '' // Path to input CSV if inputs are being given through CSV; if using YAML inputs, remove this parameter from the config
    output_dir = ''
    leading_work_dir = '' //Should be a /hot/path | Can't use /scratch
    pipeline_work_dir = '/scratch' //For individual pipeline outputs before copying to output_dir
    project_id = ''
    save_intermediate_files = false // Metapipeline-level intermediate files

    // If specified, an email will be sent to this address for every pipeline
    // start and completion
    status_email_address = ""

    partition = 'F72'
    clusterOptions = '--exclusive'
    max_parallel_jobs = 5
    // How long to wait between job submissions, in minutes. Default: 90
    // If WGS mode below is enabled, the interval will be replaced by the defaults for WGS mode and WGS queue
    cluster_submission_interval = 90

    // Whether to run samples in WGS queue with WGS rate limit
    // Disable for non-WGS samples
    uclahs_cds_wgs = true

    sample_mode = 'paired' // Choose from: 'single', 'paired', 'multi'

    // Select pipeline(s) to run. Choices: 'align-DNA', 'recalibrate-BAM', 'generate-SQC-BAM', 'calculate-targeted-coverage', 'call-gSNP', 'call-mtSNV', 'call-sSNV', 'call-sSV', 'call-gSV', 'call-sCNA', 'StableLiftsSNV'
    requested_pipelines = ['align-DNA', 'recalibrate-BAM', 'generate-SQC-BAM', 'call-gSNP', 'call-mtSNV', 'call-sSNV', 'call-sSV', 'call-gSV', 'call-sCNA']

    // Override conversion to FASTQ and re-alignment with BAM input
    override_realignment = false

    // Override recalibrate-BAM
    override_recalibrate_bam = false

    /**
    Targeted mode options

    When targeted-coverage is enabled, control whether the original provided intervals for the pipelines should be used
    By default, with this option disabled, the expanded intervals from targeted-coverage will be used
    */
    use_original_intervals = false

    // Pipeline-specific params under each respective pipeline
    pipeline_params {
        convert_BAM2FASTQ {
            get_bam_stats_SAMtools_cpus = 8
            collate_bam_SAMtools_cpus = 8
            // Uncomment to set read group tag values to override that from the original BAMs.
            // This can also be usful if you know your BAM files don't have those tags.
            // sequencing_center =
            // platform_unit =
            // id_for_pu =
        }

        align_DNA {
            enable_spark = true
            mark_duplicates = true
            reference_fasta_bwa = '/hot/resource/tool-specific-input/BWA-MEM2-2.2.1/GRCh38-BI-20160721/alt-aware/genome.fa'
            aligner = ['BWA-MEM2']
        }

        recalibrate_BAM {
            aligner = "BWA-MEM2-2.2.1"
            reference_fasta = "/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
            bundle_mills_and_1000g_gold_standard_indels_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
            bundle_known_indels_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/Homo_sapiens_assembly38.known_indels.vcf.gz"
            bundle_v0_dbsnp138_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/resources_broad_hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz"
            bundle_contest_hapmap_3p3_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/Biallelic/hapmap_3.3.hg38.BIALLELIC.PASS.2021-09-01.vcf.gz"
            parallelize_by_chromosome = true
        }

        calculate_targeted_coverage {
            reference_dict = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.dict'
            reference_dbSNP = '/hot/resource/database/dbSNP-155/thinned/GRCh38/dbSNP-155_thinned_hg38.vcf.gz'
            genome_sizes = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta.fai'
            target_bed = 'path/to/target/bedfile' //required
            bait_bed = '' //optional, path/to/bait/bedfile
            collect_metrics = true // whether or not to calculate coverage metrics
            off_target_depth = true //whether or not to calculate depth at off-target dbSNP loci
            output_enriched_target_file = true // whether or not to output a new target file containing high-coverage off-target dbSNP loci
            target_depth = false // whether or not to calculate per-base depth in target regions
        }

        generate_SQC_BAM {
            algorithms = ['stats', 'collectwgsmetrics']
            reference = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
        }

        call_gSNP {
            reference_fasta = "/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
            bundle_mills_and_1000g_gold_standard_indels_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
            bundle_v0_dbsnp138_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/resources_broad_hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz"
            bundle_hapmap_3p3_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/hapmap_3.3.hg38.vcf.gz"
            bundle_omni_1000g_2p5_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/1000G_omni2.5.hg38.vcf.gz"
            bundle_phase1_1000g_snps_high_conf_vcf_gz = "/hot/resource/tool-specific-input/GATK/GRCh38/1000G_phase1.snps.high_confidence.hg38.vcf.gz"
        }

        call_sSNV {
            algorithm = ['somaticsniper', 'strelka2', 'mutect2', 'muse']
            reference = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exome = false
            intersect_regions = '/hot/resource/tool-specific-input/pipeline-call-sSNV-6.0.0/GRCh38-BI-20160721/Homo_sapiens_assembly38_no-decoy.bed.gz'
            germline_resource_gnomad_vcf = '/hot/resource/tool-specific-input/GATK/GRCh38/af-only-gnomad.hg38.vcf.gz'
            dbSNP = '/hot/resource/database/dbSNP-155/original/GRCh38/GCF_000001405.39.gz'
            ncbi_build = 'GRCh38'
        }

        call_mtSNV {
            mt_ref_genome_dir = '/hot/resource/mitochondria_ref/genome_fasta/'
            gmapdb = '/hot/resource/mitochondria_ref/gmapdb/gmapdb_2021-03-08/'
        }

        call_gSV {
            reference_fasta = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exclusion_file = '/hot/resource/tool-specific-input/Delly/GRCh38/human.hg38.excl.tsv'
            mappability_map = '/hot/resource/tool-specific-input/Delly/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.r101.s501.blacklist.gz'
        }

        call_sSV {
            algorithm = ['delly', 'manta']
            reference_fasta = '/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exclusion_file = '/hot/resource/tool-specific-input/Delly/hg38/human.hg38.excl.tsv'
        }

        call_sCNA {
            algorithm = ['battenberg', 'cnv_facets']
            sample_sex = "male"
            position_scale = "genome-position"
            dbSNP_file = "/hot/resource/tool-specific-input/RecSNV/GRCh38/dbsnp_b150_grch38.vcf.gz"
            battenberg_reference = "/hot/resource/tool-specific-input/Battenberg/download_202204/GRCh38/battenberg_ref_hg38_chr/"
            reference_dict = "/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.dict"
        }

        call_SRC {
            SRC = [
                [
                    algorithm: 'PyClone-VI',
                    options: ''
                ]
            ]
        }

        StableLift {
            liftover_direction = ["GRCh37ToGRCh38"]
            rf_model = "/path/to/rf/model"
            fasta_ref_37 = "/hot/resource/reference-genome/GRCh37-EBI-hs37d5/hs37d5.fa"
            fasta_ref_38 = "/hot/resource/reference-genome/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
            resource_bundle_path = "/hot/project/method/AlgorithmEvaluation/BNCH-000142-GRCh37v38/publish/resource"
            funcotator_data_source = "/hot/project/method/AlgorithmEvaluation/BNCH-000142-GRCh37v38/publish/resource/funcotator_dataSources.v1.7.20200521s_StableLift"
        }
    }
}

methods.set_up()
