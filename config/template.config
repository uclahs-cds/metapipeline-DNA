includeConfig "${projectDir}/config/default.config"
includeConfig "${projectDir}/config/methods.config"
includeConfig "${projectDir}/nextflow.config"

params {
    input_csv = ''
    output_dir = ''
    leading_work_dir = '' //Should be a /hot/path | Can't use /scratch
    pipeline_work_dir = '/scratch' //For individual pipeline outputs before copying to output_dir
    project_id = ''
    save_intermediate_files = false

    partition = 'F72'
    clusterOptions = '--exclusive'
    per_job_cpus = 72
    per_job_memory_GB = 136.8
    max_parallel_jobs = 5
    // How long to wait between job submissions, in minutes. Default: 30
    // For WGS samples, at least 30 minutes is recommended
    cluster_submission_interval = 30

    sample_mode = 'paired' // Choose from: 'single', 'paired', 'multi'

    // Select pipeline(s) to run. Choices: 'align-DNA', 'call-gSNP', 'call-mtSNV', 'call-sSNV', 'call-sSV', 'call-gSV'
    requested_pipelines = ['align-DNA', 'call-gSNP', 'call-mtSNV', 'call-sSNV', 'call-sSV', 'call-gSV']

    // Override conversion to FASTQ and re-alignment with BAM input
    override_realignment = false

    // Override call-gSNP with BAM input. Setting this automatically overrides conversion to FASTQ and re-alignment.
    override_call_gsnp = false

    // Pipeline-specific params under each respective pipeline
    pipeline_params {
        convert_BAM2FASTQ {
            subworkflow_cpus = 8
            get_bam_stats_SAMtools_cpus = 8
            collate_bam_SAMtools_cpus = 8
            // Uncomment to set read group tag values to override that from the original BAMs.
            // This can also be usful if you know your BAM files don't have those tags.
            // sequencing_center =
            // platform_unit =
            // id_for_pu =
        }

        align_DNA {
            enable_spark = true
            mark_duplicates = true
            subworkflow_cpus = 72
            reference_fasta_bwa = '/hot/ref/tool-specific-input/BWA-MEM2-2.2.1/GRCh38-BI-20160721/index/genome.fa'
            aligner = ['BWA-MEM2']
        }

        call_gSNP {
            subworkflow_cpus = 72
            reference_fasta = "/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
            bundle_mills_and_1000g_gold_standard_indels_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
            bundle_known_indels_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/Homo_sapiens_assembly38.known_indels.vcf.gz"
            bundle_v0_dbsnp138_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/resources_broad_hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz"
            bundle_hapmap_3p3_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/hapmap_3.3.hg38.vcf.gz"
            bundle_omni_1000g_2p5_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/1000G_omni2.5.hg38.vcf.gz"
            bundle_phase1_1000g_snps_high_conf_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/1000G_phase1.snps.high_confidence.hg38.vcf.gz"
            bundle_contest_hapmap_3p3_vcf_gz = "/hot/ref/tool-specific-input/GATK/GRCh38/Biallelic/hapmap_3.3.hg38.BIALLELIC.PASS.2021-09-01.vcf.gz"
            max_number_of_parallel_jobs = 2
        }

        call_sSNV {
            subworkflow_cpus = 8
            algorithm = ['somaticsniper', 'strelka2', 'mutect2', 'muse']
            reference = '/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exome = false
            call_region = '/hot/ref/tool-specific-input/Strelka2/GRCh38/strelka2_call_region.bed.gz'
            intervals = ''
            germline_resource_gnomad_vcf = '/hot/ref/tool-specific-input/GATK/GRCh38/af-only-gnomad.hg38.vcf.gz'
            dbSNP = '/hot/ref/database/dbSNP-155/original/GRCh38/GCF_000001405.39.gz'
        }

        call_mtSNV {
            subworkflow_cpus = 8
            mt_ref_genome_dir = '/hot/ref/mitochondria_ref/genome_fasta/'
            gmapdb = '/hot/ref/mitochondria_ref/gmapdb/gmapdb_2021-03-08/'
        }

        call_gSV {
            subworkflow_cpus = 8
            reference_fasta = '/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exclusion_file = '/hot/ref/tool-specific-input/Delly/GRCh38/human.hg38.excl.tsv'
            mappability_map = '/hot/ref/tool-specific-input/Delly/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.r101.s501.blacklist.gz'
        }

        call_sSV {
            subworkflow_cpus = 8
            reference_fasta = '/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta'
            exclusion_file = '/hot/ref/tool-specific-input/Delly/hg38/human.hg38.excl.tsv'
        }
    }
}

methods.set_up()
