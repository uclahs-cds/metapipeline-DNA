
def get_submodule_version(submodule) {
    def submodule_dir = new File("${projectDir}/external/${submodule}")
    def commit_id = "git rev-parse HEAD".execute(null, submodule_dir).text.readLines()[0]
    return "git describe --tags ${commit_id}".execute(null, submodule_dir).text.readLines()[0]
}

methods {
    set_pipeline_logs = {
        trace.enabled = true
        trace.file = "${params.output_dir}/trace.txt"

        timeline.enabled = true
        timeline.file = "${params.output_dir}/timeline.html"
        
        report.enabled = true
        report.file = "${params.output_dir}/report.html"
    }
    
    set_process = {
        process['withName:call_germline_somatic'].executor = params.executor
        process['withName:call_germline_somatic'].maxForks = params.max_parallel_jobs
        process['withName:call_germline_somatic'].cpus = params.per_job_cpus
        process['withName:call_germline_somatic'].memory = "${params.per_job_memory_GB}GB" as nextflow.util.MemoryUnit
        process['withName:call_germline_somatic'].clusterOptions = "--partition ${params.partition} ${params.clusterOptions}"
    }

    set_submodule_versions = {
        params.version_BAM2FASTQ  = get_submodule_version('pipeline-convert-BAM2FASTQ')
        params.version_align_DNA  = get_submodule_version('pipeline-align-DNA')
        params.version_call_gSNP  = get_submodule_version('pipeline-call-gSNP')
        params.version_call_sSNV  = get_submodule_version('pipeline-call-sSNV')
        params.version_call_mtSNV = get_submodule_version('pipeline-call-mtSNV')
    }

    set_up = {
        methods.set_pipeline_logs()
        methods.set_process()
        methods.set_submodule_versions()
    }
}
